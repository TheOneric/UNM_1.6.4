package Oneric.MNC.biomes;

import java.util.Random;

import Oneric.MNC.common.MNCBiomes;
import Oneric.MNC.common.mod_netherbr;
import net.minecraft.world.WorldType;
import net.minecraft.world.biome.BiomeGenBase;
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.GenLayerBiome;
import net.minecraft.world.gen.layer.IntCache;

public class MNCGenLayerBiome extends GenLayerBiome{

	
	/** this sets all the biomes that are allowed to appear in the overworld */
    private BiomeGenBase[] allowedBiomes;
    private Random rand; 
	
	public MNCGenLayerBiome(long par1, GenLayer par3GenLayer, WorldType par4WorldType) {
		super(par1, par3GenLayer, par4WorldType);
		this.allowedBiomes = par4WorldType.getBiomesForWorldType();
		rand = new Random();
		
		
	}
	
	
	
	 /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    public int[] getInts(int par1, int par2, int par3, int par4)
    {
        int[] aint = this.parent.getInts(par1, par2, par3, par4);
        int[] aint1 = IntCache.getIntCache(par3 * par4);
        
        boolean generateRares = (this.nextInt(mod_netherbr.biomeRarity + 2) == 0);

        for (int i1 = 0; i1 < par4; ++i1)
        {
            for (int j1 = 0; j1 < par3; ++j1)
            {
                this.initChunkSeed((long)(j1 + par1), (long)(i1 + par2));
                int k1 = aint[j1 + i1 * par3];

                if (k1 == 0)
                {
                    aint1[j1 + i1 * par3] = 0;
                }
                else if (k1 == BiomeGenBase.mushroomIsland.biomeID)
                {
                    aint1[j1 + i1 * par3] = k1;
                }
                else if (k1 == 1)
                {
                	/*
                	int id = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].biomeID;
                	Random rand = new Random();
                	if(id == MNCBiomes.biome_HellPilz.biomeID && rand.nextBoolean())
                	{
                		aint1[j1 + i1 * par3] = id;
                	}
                	else if(id == MNCBiomes.biome_Blackstone.biomeID && rand.nextBoolean())
                	{
                		aint1[j1 + i1 * par3] = id;
                	}
                	else
                	{
                		while(id == MNCBiomes.biome_Blackstone.biomeID || id == MNCBiomes.biome_HellPilz.biomeID)
                		{
                			id = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].biomeID;
                		}
                		
                		aint1[j1 + i1 * par3] = id;
                	}*/
                	
                	
                	if ( this.nextInt(this.allowedBiomes.length + MNCBiomes.rareBiomes.length) > this.allowedBiomes.length && generateRares)
                	{
                	aint1[j1 + i1 * par3] = MNCBiomes.rareBiomes[this.nextInt(MNCBiomes.rareBiomes.length)].biomeID;
                	//System.out.println("----------------------------------------------------");
                	//System.out.println((j1 + par1) + "   -.-   " + (i1 + par2));
                	}
                	else
                	{
                	aint1[j1 + i1 * par3] = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].biomeID;
                	}
                	
                	
                     
                }
                else
                {
                    int l1 = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].biomeID;

                    if (l1 == BiomeGenBase.taiga.biomeID)
                    {
                        aint1[j1 + i1 * par3] = l1;
                    }
                    else
                    {
                        aint1[j1 + i1 * par3] = BiomeGenBase.icePlains.biomeID;
                    }
                }
            }
        }

        return aint1;
    }
    
    

}
